stages:
    - docs
    - pre-merge
    - build
    - release

systolic:
    stage: build
    except:
      - schedules
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    script:
      - source /tools/setup.sh
      - ./manager.sh update_deps
      - make generate_verilog TOP_MODULE=mksystolic_top TOP_FILE=src/systolic_template.bsv VERILOGDIR=mksystolic_top TOP_DIR=./
      - make clean
      - make release REL_DIR=/scratch/gitlab-builds/releases/systolic
      - ./manager.sh nuke
    only:
        - master
    tags:
        - shakti-runner

release:
    stage: release
    script:
        - python3 /scratch/version-extract-rst.py
    only:
        refs:
            - master
    tags:
        - shakti-runner
    except:
      - schedules

check-mr-compliance:
    stage: pre-merge
    except: 
        - schedules
    script:
        - export NEWVER=$(grep -P "^\[.*?\]" CHANGELOG.rst -m1 | awk '{print $1}' | sed 's/[][]//g');
        - export CURVER=$(git describe --tags| cut -f1 -d"-")
        - echo $NEWVER
        - echo $CURVER        
        - CURVER=${CURVER//./ }
        - NEWVER=${NEWVER//./ }
        - curpatch=$(echo $CURVER | awk '{print $3}')
        - curminor=$(echo $CURVER | awk '{print $2}')
        - curmajor=$(echo $CURVER | awk '{print $1}')
        - newpatch=$(echo $NEWVER | awk '{print $3}')
        - newminor=$(echo $NEWVER | awk '{print $2}')
        - newmajor=$(echo $NEWVER | awk '{print $1}')
        - if [ $newmajor = $curmajor ] && [ $newminor = $curminor ] && [ $newpatch -gt $curpatch ]; then echo "Patch Update Accepted OK"; exit 0; fi
        - if [ $newmajor = $curmajor ] && [ $newminor = $curminor ] && [ $newpatch -le $curpatch ]; then echo "Revise Patch Atleast!"; exit 1; fi
        - if [ $newmajor = $curmajor ] && [ $newminor -gt $curminor ] && [ $newpatch = 0 ]; then echo "Minor Update Accepted OK!"; exit 0; fi
        - if [ $newmajor = $curmajor ] && [ $newminor -gt $curminor ] && [ $newpatch != 0 ]; then echo "For Minor changes the patches should be 0"; exit 1; fi
        - if [ $newmajor = $curmajor ] && [ $newminor -lt $curminor ]; then echo "Minor version should greater than previuos"; exit 1; fi
        - if [ $newmajor -gt $curmajor ] && [ $newminor = 0 ] && [ $newpatch = 0 ]; then echo "Major Updated Accepted OK"; exit 0; fi
        - echo  "For Major updates Minor and Patches should be 0"
        - exit 1

    only:
        - merge_requests
    tags:
        - shakti-runner

docs:
    stage: docs
    script:
        - cd docs
        - make latexpdf
        - cd ..
        - mv docs/build/latex/dnn_accelerator.pdf .
    only:
        refs:
            - docs
    artifacts:
      name: dnn_accelerator.pdf
      paths:
        - ./dnn_accelerator.pdf
    tags:
        - shakti-runner
    except:
      - schedules

